AWSTemplateFormatVersion: 2010-09-09
Description: "Launch Template for WordPress ASG"
Parameters:
  LatestAmiId:
    Description: AMI for Instance (default is latest AmaLinux2)
    Type: "String"
  InstanceProfileWordPress:
    Description: Instance Profile Name for WordPress
    Type: "String"
  WordPressSG:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: Enter the security group ID for WordPress App
Resources:
  CWAgentConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Type: "String"
      Value: |
        {
          "agent": {
            "metrics_collection_interval": 60,
            "run_as_user": "root"
          },
          "logs": {
            "logs_collected": {
              "files": {
                "collect_list": [
                  {
                    "file_path": "/var/log/secure",
                    "log_group_name": "/var/log/secure",
                    "log_stream_name": "{instance_id}"
                  },
                  {
                    "file_path": "/var/log/httpd/access_log",
                    "log_group_name": "/var/log/httpd/access_log",
                    "log_stream_name": "{instance_id}"
                  },
                  {
                    "file_path": "/var/log/httpd/error_log",
                    "log_group_name": "/var/log/httpd/error_log",
                    "log_stream_name": "{instance_id}"
                  }
                ]
              }
            }
          },
          "metrics": {
            "append_dimensions": {
              "AutoScalingGroupName": "${aws:AutoScalingGroupName}",
              "ImageId": "${aws:ImageId}",
              "InstanceId": "${aws:InstanceId}",
              "InstanceType": "${aws:InstanceType}"
            },
            "metrics_collected": {
              "collectd": {
                "metrics_aggregation_interval": 60
              },
              "cpu": {
                "measurement": [
                  "cpu_usage_idle",
                  "cpu_usage_iowait",
                  "cpu_usage_user",
                  "cpu_usage_system"
                ],
                "metrics_collection_interval": 60,
                "resources": [
                  "*"
                ],
                "totalcpu": false
              },
              "disk": {
                "measurement": [
                  "used_percent",
                  "inodes_free"
                ],
                "metrics_collection_interval": 60,
                "resources": [
                  "*"
                ]
              },
              "diskio": {
                "measurement": [
                  "io_time",
                  "write_bytes",
                  "read_bytes",
                  "writes",
                  "reads"
                ],
                "metrics_collection_interval": 60,
                "resources": [
                  "*"
                ]
              },
              "mem": {
                "measurement": [
                  "mem_used_percent"
                ],
                "metrics_collection_interval": 60
              },
              "netstat": {
                "measurement": [
                  "tcp_established",
                  "tcp_time_wait"
                ],
                "metrics_collection_interval": 60
              },
              "statsd": {
                "metrics_aggregation_interval": 60,
                "metrics_collection_interval": 10,
                "service_address": ":8125"
              },
              "swap": {
                "measurement": [
                  "swap_used_percent"
                ],
                "metrics_collection_interval": 60
              }
            }
          }
        }
  WordpressLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: "t2.micro"
        ImageId:
          Ref: LatestAmiId
        IamInstanceProfile:
          Name:
            Ref: InstanceProfileWordPress
        SecurityGroupIds:
          - Ref: WordPressSG
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            yum -y update
            # Setup needed packages and dependencies
            yum -y install httpd wget cowsay mariadb amazon-efs-utils jq
            amazon-linux-extras install -y php7.2
            amazon-linux-extras install epel -y
            yum install stress -y
            systemctl enable httpd
            systemctl start httpd

            # Set Config variables
            region=${AWS::Region}
            wordpressefs=$(aws cloudformation list-exports --region $region --query 'Exports[?Name==`skyelp-wordpress-efs`].Value' --output text)
            secretsarn=$(aws cloudformation list-exports --region $region --query 'Exports[?Name==`skyelp-secretsmanager-arn`].Value' --output text)
            albhost=$(aws cloudformation list-exports --region $region --query 'Exports[?Name==`wordpress-app-loadbalancer-url`].Value' --output text)

            aws secretsmanager get-secret-value --region $region --secret-id $secretsarn --query SecretString  --output text > /temp/temp_pass.txt
            DatabaseName=$(cat temp_pass.txt | jq -r .dbname)
            DatabasePassword=$(cat temp_pass.txt | jq -r .password)
            DatabaseUsername=$(cat temp_pass.txt | jq -r .username)
            DatabaseEndpoint=$(cat temp_pass.txt | jq -r .host)
            rm /temp/temp_pass.txt

            # Setup Wordpress EFS
            mkdir -p /var/www/html/wp-content
            chown -R ec2-user:apache /var/www/
            echo -e "$WPEFS:/ /var/www/html/wp-content efs _netdev,tls,iam 0 0" >> /etc/fstab
            mount -a -t efs defaults

            #  CWAgent Install
            rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
            mkdir -p /usr/share/collectd/
            touch /usr/share/collectd/types.db
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:${CWAgentConfig} -s

            #  Install Wordpress
            wget http://wordpress.org/latest.tar.gz -P /var/www/html
            cd /var/www/html
            tar -zxvf latest.tar.gz
            cp -rvf wordpress/* .
            rm -R wordpress
            rm latest.tar.gz
            echo "<html><head><title>test</title></head><body>test</body></html>" > /var/www/html/healthcheck.html

            # Configure Wordpress
            cp ./wp-config-sample.php ./wp-config.php
            sed -i "s/'localhost'/'$DatabaseEndpoint'/g" wp-config.php
            sed -i "s/'database_name_here'/'$DatabaseName'/g" wp-config.php
            sed -i "s/'username_here'/'$DatabaseUsername'/g" wp-config.php
            sed -i "s/'password_here'/'$DatabasePassword'/g" wp-config.php

            #  permissions
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;

            # STEP 7 COWSAY
            echo "#!/bin/sh" > /etc/update-motd.d/40-cow
            echo 'cowsay "Amazon Linux 2 AMI - WordPress"' > /etc/update-motd.d/40-cow
            chmod 755 /etc/update-motd.d/40-cow
            rm /etc/update-motd.d/30-banner
            update-motd

            # Step 8 Create update_wp_id.sh file
            cat >> /home/ec2-user/update_wp_ip.sh<< 'EOF'
            #!/bin/bash
            source <(php -r 'require("/var/www/html/wp-config.php"); echo("DB_NAME=".DB_NAME."; DB_USER=".DB_USER."; DB_PASSWORD=".DB_PASSWORD."; DB_HOST=".DB_HOST); ')
            SQL_COMMAND="mysql -u $DB_USER -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e"
            OLD_URL=$(mysql -u $DB_USER -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e 'select option_value from wp_options where option_id = 1;' | grep http)
            HOST=$albhost

            $SQL_COMMAND "UPDATE wp_options SET option_value = replace(option_value, '$OLD_URL', 'http://$HOST') WHERE option_name = 'home' OR option_name = 'siteurl';"
            $SQL_COMMAND "UPDATE wp_posts SET guid = replace(guid, '$OLD_URL','http://$HOST');"
            $SQL_COMMAND "UPDATE wp_posts SET post_content = replace(post_content, '$OLD_URL', 'http://$HOST');"
            $SQL_COMMAND "UPDATE wp_postmeta SET meta_value = replace(meta_value,'$OLD_URL','http://$HOST');"
            EOF

            chmod 755 /home/ec2-user/update_wp_ip.sh
            echo "/home/ec2-user/update_wp_ip.sh" >> /etc/rc.local
            /home/ec2-user/update_wp_ip.sh
Outputs:
  exportWordpressLaunchTemplate:
    Description: Export Wordpress Launch Template
    Value:
      Ref: WordpressLaunchTemplate
    Export:
      Name: skyelp-wordpress-launchtemplate
